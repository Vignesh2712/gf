## This file contains all available configuration options
## with their default values.

# See https://github.com/golangci/golangci-lint#config-file
# See https://golangci-lint.run/usage/configuration/
run:
  issues-exit-code: 1 #Default
  tests: true #Default
  skip-dirs: # sets the directories to ignore
    - util
    - .*~
    - api/swagger/docs
  skip-files: # Set the go source files that do not need to be checked to support regular matching
    - ".*.my.go$"
    - ".*.pb.go$"
    - _test.go

linters:
  # Disable everything by default so upgrades to not include new "default
  # enabled" linters.
  disable-all: true
  # Specifically enable linters we want to use.
  enable:
    # - deadcode # The owner seems to have abandoned the linter. Replaced by unused.
    # - bodyclose # checks whether HTTP response body is closed successfully
    - depguard # Go linter that checks if package imports are in a list of acceptable packages
    - dogsled # Checks assignments with too many blank identifiers (e.g. x, , , _, := f())
    # - errcheck # See https://golangci-lint.run/usage/linters/#errcheck
    - funlen # Tool for detection of long functions
    - goconst # Finds repeated strings that could be replaced by a constant
    - gocritic # See https://golangci-lint.run/usage/linters/#gocritic
    - gocyclo # Computes and checks the cyclomatic complexity of functions
    - gofmt # Gofmt checks whether code was gofmt-ed. By default this tool runs with -s option to check for code simplification
    - goimports # In addition to fixing imports, goimports also formats your code in the same style as gofmt.
    - gosimple # Linter for Go source code that specializes in simplifying code
    - govet # See https://golangci-lint.run/usage/linters/#govet
    - godot # Check if comments end in a period
    # - ineffassign # Detects when assignments to existing variables are not used
    - misspell # Finds commonly misspelled English words in comments
    - nolintlint # Reports ill-formed or insufficient nolint directives
    - revive # Fast, configurable, extensible, flexible, and beautiful linter for Go. Drop-in replacement of golint.
    - staticcheck # See https://golangci-lint.run/usage/linters/#staticcheck
    - typecheck # Like the front-end of a Go compiler, parses and type-checks Go code
    #- unused # Checks Go code for unused constants, variables, functions and types
    #- unparam # Reports unused function parameters
    - whitespace # Tool for detection of leading and trailing whitespace


issues:
  exclude-rules:
    # helpers in tests often (rightfully) pass a *testing.T as their first argument
    - path: _test\.go
      text: "context.Context should be the first parameter of a function"
      linters:
        - revive
    # Yes, they are, but it's okay in a test
    - path: _test\.go
      text: "exported func.*returns unexported type.*which can be annoying to use"
      linters:
        - revive

    # https://github.com/go-critic/go-critic/issues/926
    - linters:
        - gocritic
      text: "unnecessaryDefer:"

linters-settings:
  misspell:
    locale: US
    ignore-words:
      - cancelled
  goimports:
    local-prefixes: github.com/gogf/gf
  godot:
    # Comments to be checked: `declarations`, `toplevel`, or `all`.
    # Default: declarations
    scope: toplevel
    exclude:
      # Exclude sentence fragments for lists.
      - '^[ ]*[-•]'
      # Exclude sentences prefixing a list.
      - ':$'
    # Check that each sentence ends with a period.
    # Default: true
    period: false
    # Check that each sentence starts with a capital letter.
    # Default: false
    capital: false
  godox:
    keywords: # 建议设置为BUG、FIXME、OPTIMIZE、HACK
      - BUG
      - FIXME
      - OPTIMIZE
      - HACK

  revive:
    ignore-generated-header: true
    severity: error
    rules:
      - name: atomic
      - name: line-length-limit
        severity: error
        arguments: [ 380 ]
      - name: unhandled-error
        severity: warning
        disabled: true
        arguments: [ "fmt.Printf", "myFunction" ]
      - name: var-naming
        severity: warning
        disabled: true
        arguments:
          - [ "ID","URL","IP","HTTP","JSON","API","UID","Id","Api","Uid","Http","Json","Ip","Url" ] # AllowList
          - [ "VM" ] # DenyList
      - name: string-format
        severity: warning
        disabled: false
        arguments:
          - - 'core.WriteError[1].Message'
            - '/^([^A-Z]|$)/'
            - must not start with a capital letter
          - - 'fmt.Errorf[0]'
            - '/(^|[^\.!?])$/'
            - must not end in punctuation
          - - panic
            - '/^[^\n]*$/'
            - must not contain line breaks
      - name: function-result-limit
        severity: warning
        disabled: false
        arguments: [ 4 ]
  funlen:
    # Checks the number of lines in a function.
    # If lower than 0, disable the check.
    # Default: 60
    lines: 320
    # Checks the number of statements in a function.
    # If lower than 0, disable the check.
    # Default: 40
    statements: -1
  goconst:
    # Minimal length of string constant.
    # Default: 3
    min-len: 2
    # Minimum occurrences of constant string count to trigger issue.
    # Default: 3
    # For subsequent optimization, the value is reduced.
    min-occurrences: 30
    # Ignore test files.
    # Default: false
    ignore-tests: true
    # Look for existing constants matching the values.
    # Default: true
    match-constant: false
    # Search also for duplicated numbers.
    # Default: false
    numbers: true
    # Minimum value, only works with goconst.numbers
    # Default: 3
    min: 5
    # Maximum value, only works with goconst.numbers
    # Default: 3
    max: 20
    # Ignore when constant is not used as function argument.
    # Default: true
    ignore-calls: false
  gocritic:
    disabled-checks:
      - ifElseChain
      - assignOp
      - appendAssign
      - singleCaseSwitch
      - regexpMust
      - typeSwitchVar
      - elseif
  gocyclo:
    # Minimal code complexity to report.
    # Default: 30 (but we recommend 10-20)
    min-complexity: 60
  gosimple:
    # Select the Go version to target.
    # Default: 1.13
    # Deprecated: use the global `run.go` instead.
    go: "1.17"
    # Sxxxx checks in https://staticcheck.io/docs/configuration/options/#checks
    # Default: ["*"]
    checks: [ "all","-S1001","-S1000","-S1025","-S1023","-S1009","-S1040","-S1029","-S1034" ]
  dogsled:
    # Checks assignments with too many blank identifiers.
    # Default: 2
    max-blank-identifiers: 4
  unparam:
    # Inspect exported functions.
    #
    # Set to true if no external program/library imports your code.
    # XXX: if you enable this setting, unparam will report a lot of false-positives in text editors:
    # if it's called for subdir of a project it can't find external interfaces. All text editor integrations
    # with golangci-lint call it on a directory with the changed file.
    #
    # Default: false
    check-exported: true
  govet:
    # Report about shadowed variables.
    # Default: false
    check-shadowing: true
    # Settings per analyzer.
    settings:
      # Analyzer name, run `go tool vet help` to see all analyzers.
      printf:
        # Comma-separated list of print function names to check (in addition to default, see `go tool vet help printf`).
        # Default: []
        funcs:
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
        # shadow:
        # Whether to be strict about shadowing; can be noisy.
        # Default: false
        # strict: false
      unusedresult:
        # Comma-separated list of functions whose results must be used
        # (in addition to defaults context.WithCancel,context.WithDeadline,context.WithTimeout,context.WithValue,
        # errors.New,fmt.Errorf,fmt.Sprint,fmt.Sprintf,sort.Reverse)
        # Default []
        funcs:
          - pkg.MyFunc
          - context.WithCancel
        # Comma-separated list of names of methods of type func() string whose results must be used
        # (in addition to default Error,String)
        # Default []
        stringmethods:
          - MyMethod
    # Enable all analyzers.
    # Default: false
    enable-all: true
    # Disable analyzers by name.
    # Run `go tool vet help` to see all analyzers.
    # Default: []
    disable:
      - asmdecl
      - assign
      - atomic
      - atomicalign
      - bools
      - buildtag
      - cgocall
      - composites
      - copylocks
      - deepequalerrors
      - errorsas
      - fieldalignment
      - findcall
      - framepointer
      - httpresponse
      - ifaceassert
      - loopclosure
      - lostcancel
      - nilfunc
      - nilness
      - reflectvaluecompare
      - shift
      - shadow
      - sigchanyzer
      - sortslice
      - stdmethods
      - stringintconv
      - structtag
      - testinggoroutine
      - tests
      - unmarshal
      - unreachable
      - unsafeptr
      - unusedwrite
  staticcheck:
    # Select the Go version to target.
    # Default: "1.13"
    # Deprecated: use the global `run.go` instead.
    go: "1.15"
    # SAxxxx checks in https://staticcheck.io/docs/configuration/options/#checks
    # Default: ["*"]
    checks: [ "all","-SA1019","-SA4015","-SA1029","-SA1016","-SA9003","-SA4006","-SA6003" ]